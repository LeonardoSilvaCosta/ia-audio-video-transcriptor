<h1 align="center">IA AUDIO V√çDEO TRANSCRIPTOR (2024)</h1>
<p align="center">This project was designed to support the activities of the UX team, composed of Anna Donn√°, Gustavo Dias, Micael Marques, Leonardo Costa, and Tayany Morgana, during the completion of the UX Unic√≥rnio course. </p>
<img src="https://img.shields.io/badge/REACTJS-WORK-blue">

Table of contents
=================
<!--ts-->
   * [About](#About)
   * [Features](#features)
   * [How to use](#HowToUse)
   * [Technologies](#technologies)
   * [Author](#author)
<!--te-->

---

### üíª About

This project utilizes the OPEN AI API to transcribe audio and video files. In addition to a verbatim transcription, the application uses CHAT GPT to generate a processed transcription that produces smoother content for the reader without, however, altering the true meaning of the transcribed content. The final product generated when running the application is an analysis file based on user input.

---
### Features

- [x] √Åudio transcription
- [x] V√≠deo transcription
- [x] Generate transcription file
- [x] Generate processed transcription file
- [x] Generate analysis from transcription file based on user input

### ü§î How to use
- 1. Clone the application and run npm install.
- 2. Before starting, review the 'commands' folder. Here, you can define your commands for the AI to generate the processed transcription and analysis.
- 3. Open the 'server.ts' file in the 'src' folder. Modify the variables context, audioFilePath, roles, and analysisCommands to match your specific use case.
- 4. Inside the 'public' folder, create a dedicated folder for your use case (e.g., 'interview'). Within this folder, set up the following subfolders: 'original-files,' 'transcriptions,' 'improved-transcriptions,' 'file-cuts,' and 'analysis.'
- 5. Run the application.

### üìö Glossary

- commands folder: a directory where you define specific commands that instruct the AI on how to process transcriptions according to your preferences.
- context variable: a variable used to categorize and organize the files generated by the application. Examples of contexts include 'supervision,' 'interview,' etc.
- audioFilePath: the file path pointing to the original audio or video file that needs to be transcribed.
- roles: the roles assigned to individuals speaking in the audio or video. These roles help identify and differentiate speakers during transcription.
- analysisCommand: the selected command used to generate the analysis file. This command dictates the specific criteria and methods employed for generating analytical insights.
- transcriptions folder: a folder within the 'public' directory where the transcriptions are stored. This can include both the verbatim and processed transcriptions.
- improved-transcriptions folder: a subfolder within the 'public' directory to store transcriptions that have been enhanced or processed for improved readability.
- file-cuts folder: a subfolder within the 'public' directory where segmented or cut versions of the original audio or video files are stored.
- analysis folder: asubfolder within the 'public' directory where analysis files generated by the application are stored.
- npm install: a command used to install the required Node.js packages and dependencies for the application. This command ensures that the necessary libraries are available for the application to run.
- server.ts file: ahe main server file of the application, located in the 'src' folder. This file contains the server-side logic, including the configuration of variables and routes.
- application run: the process of executing the application, typically initiated using a command like npm start. This step brings the application to life and allows users to interact with its features.

### üõ† Technologies

- [cors](https://www.npmjs.com/package/cors)
- [dotenv](https://www.npmjs.com/package/dotenv)
- [express](https://expressjs.com/)
- [ffprobe-static](https://www.npmjs.com/package/ffprobe-static)
- [fluent-ffmpeg](https://www.npmjs.com/package/fluent-ffmpeg)
- [helmet](https://www.npmjs.com/package/helmet)
- [morgan](https://www.npmjs.com/package/morgan)
- [Node.JS](https://nodejs.org/en)
- [NPM](https://www.npmjs.com/)
- [openai](https://platform.openai.com/docs/overview)
- [typescript](https://www.typescriptlang.org/)
- [uuid](https://www.npmjs.com/package/uuid)
- [vsCode](https://code.visualstudio.com/)
---

### Author
[Leonardo da Silva Costa](https://www.linkedin.com/in/leonardo-da-silva-costa/)

Em busca do pr√≥ximo n√≠vel üöÄ - Never stop learning. üßë‚Äçüéì

üîÑFunctional, but can be improved!üîÑ 




